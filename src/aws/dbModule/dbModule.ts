// generated by cdktf get
// git::https://github.com/sourcefuse/terraform-aws-ref-arch-db//
import { TerraformModule, TerraformModuleUserConfig } from "cdktf";
import { Construct } from "constructs";
export interface DbModuleConfig extends TerraformModuleUserConfig {
  /**
   * Account ID where the resources will be deployed to. This is required if `enable_custom_option_group` is set to `true`.
   */
  readonly accountId?: string;
  /**
   * Additional key-value pairs to add to each map in `tags_as_list_of_maps`. Not added to `tags` or `id`.
This is for some rare cases where resources want additional configuration of tags
and therefore take a list of maps with tag key, value, and additional configuration.

   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly additionalTagMap?: { [key: string]: string };
  /**
   * ID element. Additional attributes (e.g. `workers` or `cluster`) to add to `id`,
in the order they appear in the list. New attributes are appended to the
end of the list. The elements of the list are joined by the `delimiter`
and treated as a single ID element.

   * @default
   */
  readonly attributes?: string[];
  /**
   * Enable to allow major engine version upgrades when changing engine versions. Defaults to false.
   */
  readonly auroraAllowMajorVersionUpgrade?: boolean;
  /**
   * List of CIDR blocks allowed to access the cluster
   * @default
   */
  readonly auroraAllowedCidrBlocks?: string[];
  /**
   * Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window
   * @default true
   */
  readonly auroraAutoMinorVersionUpgrade?: boolean;
  /**
   * Enable creation of an Aurora Cluster
   */
  readonly auroraClusterEnabled?: boolean;
  /**
   * The family of the DB cluster parameter group
   * @default aurora-postgresql14
   */
  readonly auroraClusterFamily?: string;
  /**
   * Database name (default is not to create a database)
   */
  readonly auroraClusterName?: string;
  /**
   * Number of DB instances to create in the cluster
   */
  readonly auroraClusterSize?: number;
  /**
   * Password of the DB admin
   */
  readonly auroraDbAdminPassword?: string;
  /**
   * Name of the default DB admin user role
   */
  readonly auroraDbAdminUsername?: string;
  /**
   * Database name.
   * @default auroradb
   */
  readonly auroraDbName?: string;
  /**
   * The name of the database engine to be used for this DB cluster. Valid values: `aurora`, `aurora-mysql`, `aurora-postgresql`
   * @default aurora-postgresql
   */
  readonly auroraEngine?: string;
  /**
   * The database engine mode. Valid values: `parallelquery`, `provisioned`, `serverless`
   * @default provisioned
   */
  readonly auroraEngineMode?: string;
  /**
   * The version of the database engine tocl use. See `aws rds describe-db-engine-versions`
   * @default 14.5
   */
  readonly auroraEngineVersion?: string;
  /**
   * Instance type to use
   * @default db.serverless
   */
  readonly auroraInstanceType?: string;
  /**
   * List of nested attributes with scaling properties. Only valid when engine_mode is set to serverless
   * @default
   */
  readonly auroraScalingConfiguration?: any;
  /**
   * List of security group IDs to be allowed to connect to the DB instance
   * @default
   */
  readonly auroraSecurityGroups?: string[];
  /**
   * serverlessv2 scaling properties
   */
  readonly auroraServerlessv2ScalingConfiguration?: any;
  /**
   * Subnets for the cluster to run in.
   * @default
   */
  readonly auroraSubnets?: string[];
  /**
   * Single object for setting entire context at once.
See description of individual variables for details.
Leave string and numeric variables as `null` to use default value.
Individual variable settings (non-null) override settings in context object,
except for attributes, tags, and additional_tag_map, which are merged.

   * @default [object Object]
   */
  readonly context?: any;
  /**
   * Protect the instance from being deleted
   */
  readonly deletionProtection?: boolean;
  /**
   * undefined
   * @default 10
   */
  readonly deletionWindowInDays?: number;
  /**
   * Delimiter to be used between ID elements.
Defaults to `-` (hyphen). Set to `""` to use no delimiter at all.

   */
  readonly delimiter?: string;
  /**
   * Describe additional descriptors to be output in the `descriptors` output map.
Map of maps. Keys are names of descriptors. Values are maps of the form
`{
   format = string
   labels = list(string)
}`
(Type is `any` so the map values can later be enhanced to provide additional options.)
`format` is a Terraform format string to be passed to the `format()` function.
`labels` is a list of labels, in order, to pass to `format()` function.
Label values will be normalized before being passed to `format()` so they will be
identical to how they appear in `id`.
Default is `{}` (`descriptors` output will be empty).

   * @default [object Object]
   */
  readonly descriptorFormats?: any;
  /**
   * Enable the custom Option Group for restoring backups via S3
   */
  readonly enableCustomOptionGroup?: boolean;
  /**
   * undefined
   * @default true
   */
  readonly enableKeyRotation?: boolean;
  /**
   * Set to false to prevent the module from creating any resources
   */
  readonly enabled?: boolean;
  /**
   * ARN to the enhanced monitoring policy
   * @default arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
   */
  readonly enhancedMonitoringArn?: string;
  /**
   * Name to assign the enhanced monitoring resources.
   */
  readonly enhancedMonitoringName: string;
  /**
   * ID element. Usually used for region e.g. 'uw2', 'us-west-2', OR role 'prod', 'staging', 'dev', 'UAT'
   */
  readonly environment: string;
  /**
   * Limit `id` to this many characters (minimum 6).
Set to `0` for unlimited length.
Set to `null` for keep the existing setting, which defaults to `0`.
Does not affect `id_full`.

   */
  readonly idLengthLimit?: number;
  /**
   * Controls the letter case of the `tags` keys (label names) for tags generated by this module.
Does not affect keys of tags passed in via the `tags` input.
Possible values: `lower`, `title`, `upper`.
Default value: `title`.

   */
  readonly labelKeyCase?: string;
  /**
   * The order in which the labels (ID elements) appear in the `id`.
Defaults to ["namespace", "environment", "stage", "name", "attributes"].
You can omit any of the 6 labels ("tenant" is the 6th), but at least one must be present.

   */
  readonly labelOrder?: string[];
  /**
   * Controls the letter case of ID elements (labels) as included in `id`,
set as tag values, and output by this module individually.
Does not affect values of tags passed in via the `tags` input.
Possible values: `lower`, `title`, `upper` and `none` (no transformation).
Set this to `title` and set `delimiter` to `""` to yield Pascal Case IDs.
Default value: `lower`.

   */
  readonly labelValueCase?: string;
  /**
   * Set of labels (ID elements) to include as tags in the `tags` output.
Default is to include all labels.
Tags with empty values will not be included in the `tags` output.
Set to `[]` to suppress all generated tags.
**Notes:**
  The value of the `name` tag, if included, will be the `id`, not the `name`.
  Unlike other `null-label` inputs, the initial setting of `labels_as_tags` cannot be
  changed in later chained modules. Attempts to change it will be silently ignored.

   * @default default
   */
  readonly labelsAsTags?: string[];
  /**
   * ID element. Usually the component or solution name, e.g. 'app' or 'jenkins'.
This is the only ID element not also included as a `tag`.
The "name" tag is set to the full `id` string. There is no tag with the value of the `name` input.

   */
  readonly name?: string;
  /**
   * ID element. Usually an abbreviation of your organization name, e.g. 'eg' or 'cp', to help ensure generated IDs are globally unique
   */
  readonly namespace: string;
  /**
   * The allocated storage in GBs. Required unless a snapshot_identifier or replicate_source_db is provided.
   * @default 20
   */
  readonly rdsInstanceAllocatedStorage?: number;
  /**
   * Allow major version upgrade
   */
  readonly rdsInstanceAllowMajorVersionUpgrade?: boolean;
  /**
   * The whitelisted CIDRs which to allow ingress traffic to the DB instance
   * @default
   */
  readonly rdsInstanceAllowedCidrBlocks?: string[];
  /**
   * Specifies whether any database modifications are applied immediately, or during the next maintenance window
   * @default true
   */
  readonly rdsInstanceApplyImmediately?: boolean;
  /**
   * Allow automated minor version upgrade (e.g. from Postgres 9.5.3 to Postgres 9.5.4)
   * @default true
   */
  readonly rdsInstanceAutoMinorVersionUpgrade?: boolean;
  /**
   * Backup retention period in days. Must be > 0 to enable backups
   */
  readonly rdsInstanceBackupRetentionPeriod?: number;
  /**
   * When AWS can perform DB snapshots, can't overlap with maintenance window
   * @default 22:00-03:00
   */
  readonly rdsInstanceBackupWindow?: string;
  /**
   * The identifier of the CA certificate for the DB instance
   */
  readonly rdsInstanceCaCertIdentifier?: string;
  /**
   * Copy tags from DB to a snapshot
   * @default true
   */
  readonly rdsInstanceCopyTagsToSnapshot?: boolean;
  /**
   * The name of the database to create when the DB instance is created
   */
  readonly rdsInstanceDatabaseName?: string;
  /**
   * Password for the primary DB user. Required unless a snapshot_identifier or replicate_source_db is provided.
   */
  readonly rdsInstanceDatabasePassword?: string;
  /**
   * Database port (_e.g._ 3306 for MySQL). Used in the DB Security Group to allow access to the DB instance from the provided security_group_ids
   * @default 5432
   */
  readonly rdsInstanceDatabasePort?: number;
  /**
   * The name of the database to create when the DB instance is created
   * @default admin
   */
  readonly rdsInstanceDatabaseUser?: string;
  /**
   * A list of DB options to apply with an option group. Depends on DB engine
   * @default
   */
  readonly rdsInstanceDbOptions?: any;
  /**
   * A list of DB parameters to apply. Note that parameters may differ from a DB family to another
   * @default
   */
  readonly rdsInstanceDbParameter?: any;
  /**
   * The DB parameter group family name. The value depends on DB engine used. See DBParameterGroupFamily for instructions on how to retrieve applicable value.
   * @default postgres14
   */
  readonly rdsInstanceDbParameterGroup?: string;
  /**
   * The ID of the DNS Zone in Route53 where a new DNS record will be created for the DB host name
   */
  readonly rdsInstanceDnsZoneId?: string;
  /**
   * Enable creation of an RDS instance
   */
  readonly rdsInstanceEnabled?: boolean;
  /**
   * Database engine type. Required unless a snapshot_identifier or replicate_source_db is provided. For supported values, see the Engine parameter in API action CreateDBInstance.
   * @default postgres
   */
  readonly rdsInstanceEngine?: string;
  /**
   * Database engine version, depends on engine type. Required unless a snapshot_identifier or replicate_source_db is provided.
   * @default 14.3
   */
  readonly rdsInstanceEngineVersion?: string;
  /**
   * The DB host name created in Route53
   * @default db
   */
  readonly rdsInstanceHostName?: string;
  /**
   * Class of RDS instance
   * @default db.t2.medium
   */
  readonly rdsInstanceInstanceClass?: string;
  /**
   * License model for this DB. Optional, but required for some DB Engines. Valid values: license-included | bring-your-own-license | general-public-license
   */
  readonly rdsInstanceLicenseModel?: string;
  /**
   * The window to perform maintenance in. Syntax: 'ddd:hh24:mi-ddd:hh24:mi' UTC
   * @default Mon:03:00-Mon:04:00
   */
  readonly rdsInstanceMaintenanceWindow?: string;
  /**
   * major_engine_version	Database MAJOR engine version, depends on engine type
   * @default 14
   */
  readonly rdsInstanceMajorEngineVersion?: string;
  /**
   * Set to true if multi AZ deployment must be supported
   */
  readonly rdsInstanceMultiAz?: boolean;
  /**
   * RDS Instance name
   */
  readonly rdsInstanceName?: string;
  /**
   * Name of the DB option group to associate
   */
  readonly rdsInstanceOptionGroupName?: string;
  /**
   * Determines if database can be publicly available (NOT recommended)
   */
  readonly rdsInstancePubliclyAccessible?: boolean;
  /**
   * The IDs of the security groups from which to allow ingress traffic to the DB instance
   * @default
   */
  readonly rdsInstanceSecurityGroupIds?: string[];
  /**
   * If true (default), no snapshot will be made before deleting DB
   * @default true
   */
  readonly rdsInstanceSkipFinalSnapshot?: boolean;
  /**
   * Snapshot identifier e.g: rds:production-2019-06-26-06-05. If specified, the module create cluster from the snapshot
   */
  readonly rdsInstanceSnapshotIdentifier?: string;
  /**
   * Specifies whether the DB instance is encrypted. The default is false if not specified
   * @default true
   */
  readonly rdsInstanceStorageEncrypted?: boolean;
  /**
   * One of 'standard' (magnetic), 'gp2' (general purpose SSD), or 'io1' (provisioned IOPS SSD)
   * @default gp2
   */
  readonly rdsInstanceStorageType?: string;
  /**
   * List of subnet IDs for the DB. DB instance will be created in the VPC associated with the DB subnet group provisioned using the subnet IDs. Specify one of subnet_ids, db_subnet_group_name or availability_zone
   * @default
   */
  readonly rdsInstanceSubnetIds?: string[];
  /**
   * Override the default created KMS key to encrypt storage
   */
  readonly rdsKmsKeyArnOverride?: string;
  /**
   * Override the default created KMS key ID to encrypt storage
   */
  readonly rdsKmsKeyIdOverride?: string;
  /**
   * Terraform regular expression (regex) string.
Characters matching the regex will be removed from the ID elements.
If not set, `"/[^a-zA-Z0-9-]/"` is used to remove all characters other than hyphens, letters and digits.

   */
  readonly regexReplaceChars?: string;
  /**
   * Region which the resource is deployed to
   * @default us-east-1
   */
  readonly region?: string;
  /**
   * Override the KMS key alias for the S3 bucket. Default is set to AWS Managed KMS alias.
   */
  readonly s3KmsAliasOverride?: string;
  /**
   * ID element. Usually used to indicate role, e.g. 'prod', 'staging', 'source', 'build', 'test', 'deploy', 'release'
   */
  readonly stage?: string;
  /**
   * Additional tags (e.g. `{'BusinessUnit': 'XYZ'}`).
Neither the tag keys nor the tag values will be modified by this module.

   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly tags?: { [key: string]: string };
  /**
   * ID element _(Rarely used, not included by default)_. A customer identifier, indicating who this instance of a resource is for
   */
  readonly tenant?: string;
  /**
   * vpc_id for the VPC to run the cluster.
   */
  readonly vpcId: string;
}
export class DbModule extends TerraformModule {
  private readonly inputs: { [name: string]: any } = {};
  public constructor(scope: Construct, id: string, config: DbModuleConfig) {
    super(scope, id, {
      ...config,
      source: "git::https://github.com/sourcefuse/terraform-aws-ref-arch-db//",
    });
    this.accountId = config.accountId;
    this.additionalTagMap = config.additionalTagMap;
    this.attributes = config.attributes;
    this.auroraAllowMajorVersionUpgrade = config.auroraAllowMajorVersionUpgrade;
    this.auroraAllowedCidrBlocks = config.auroraAllowedCidrBlocks;
    this.auroraAutoMinorVersionUpgrade = config.auroraAutoMinorVersionUpgrade;
    this.auroraClusterEnabled = config.auroraClusterEnabled;
    this.auroraClusterFamily = config.auroraClusterFamily;
    this.auroraClusterName = config.auroraClusterName;
    this.auroraClusterSize = config.auroraClusterSize;
    this.auroraDbAdminPassword = config.auroraDbAdminPassword;
    this.auroraDbAdminUsername = config.auroraDbAdminUsername;
    this.auroraDbName = config.auroraDbName;
    this.auroraEngine = config.auroraEngine;
    this.auroraEngineMode = config.auroraEngineMode;
    this.auroraEngineVersion = config.auroraEngineVersion;
    this.auroraInstanceType = config.auroraInstanceType;
    this.auroraScalingConfiguration = config.auroraScalingConfiguration;
    this.auroraSecurityGroups = config.auroraSecurityGroups;
    this.auroraServerlessv2ScalingConfiguration =
      config.auroraServerlessv2ScalingConfiguration;
    this.auroraSubnets = config.auroraSubnets;
    this.context = config.context;
    this.deletionProtection = config.deletionProtection;
    this.deletionWindowInDays = config.deletionWindowInDays;
    this.delimiter = config.delimiter;
    this.descriptorFormats = config.descriptorFormats;
    this.enableCustomOptionGroup = config.enableCustomOptionGroup;
    this.enableKeyRotation = config.enableKeyRotation;
    this.enabled = config.enabled;
    this.enhancedMonitoringArn = config.enhancedMonitoringArn;
    this.enhancedMonitoringName = config.enhancedMonitoringName;
    this.environment = config.environment;
    this.idLengthLimit = config.idLengthLimit;
    this.labelKeyCase = config.labelKeyCase;
    this.labelOrder = config.labelOrder;
    this.labelValueCase = config.labelValueCase;
    this.labelsAsTags = config.labelsAsTags;
    this.name = config.name;
    this.namespace = config.namespace;
    this.rdsInstanceAllocatedStorage = config.rdsInstanceAllocatedStorage;
    this.rdsInstanceAllowMajorVersionUpgrade =
      config.rdsInstanceAllowMajorVersionUpgrade;
    this.rdsInstanceAllowedCidrBlocks = config.rdsInstanceAllowedCidrBlocks;
    this.rdsInstanceApplyImmediately = config.rdsInstanceApplyImmediately;
    this.rdsInstanceAutoMinorVersionUpgrade =
      config.rdsInstanceAutoMinorVersionUpgrade;
    this.rdsInstanceBackupRetentionPeriod =
      config.rdsInstanceBackupRetentionPeriod;
    this.rdsInstanceBackupWindow = config.rdsInstanceBackupWindow;
    this.rdsInstanceCaCertIdentifier = config.rdsInstanceCaCertIdentifier;
    this.rdsInstanceCopyTagsToSnapshot = config.rdsInstanceCopyTagsToSnapshot;
    this.rdsInstanceDatabaseName = config.rdsInstanceDatabaseName;
    this.rdsInstanceDatabasePassword = config.rdsInstanceDatabasePassword;
    this.rdsInstanceDatabasePort = config.rdsInstanceDatabasePort;
    this.rdsInstanceDatabaseUser = config.rdsInstanceDatabaseUser;
    this.rdsInstanceDbOptions = config.rdsInstanceDbOptions;
    this.rdsInstanceDbParameter = config.rdsInstanceDbParameter;
    this.rdsInstanceDbParameterGroup = config.rdsInstanceDbParameterGroup;
    this.rdsInstanceDnsZoneId = config.rdsInstanceDnsZoneId;
    this.rdsInstanceEnabled = config.rdsInstanceEnabled;
    this.rdsInstanceEngine = config.rdsInstanceEngine;
    this.rdsInstanceEngineVersion = config.rdsInstanceEngineVersion;
    this.rdsInstanceHostName = config.rdsInstanceHostName;
    this.rdsInstanceInstanceClass = config.rdsInstanceInstanceClass;
    this.rdsInstanceLicenseModel = config.rdsInstanceLicenseModel;
    this.rdsInstanceMaintenanceWindow = config.rdsInstanceMaintenanceWindow;
    this.rdsInstanceMajorEngineVersion = config.rdsInstanceMajorEngineVersion;
    this.rdsInstanceMultiAz = config.rdsInstanceMultiAz;
    this.rdsInstanceName = config.rdsInstanceName;
    this.rdsInstanceOptionGroupName = config.rdsInstanceOptionGroupName;
    this.rdsInstancePubliclyAccessible = config.rdsInstancePubliclyAccessible;
    this.rdsInstanceSecurityGroupIds = config.rdsInstanceSecurityGroupIds;
    this.rdsInstanceSkipFinalSnapshot = config.rdsInstanceSkipFinalSnapshot;
    this.rdsInstanceSnapshotIdentifier = config.rdsInstanceSnapshotIdentifier;
    this.rdsInstanceStorageEncrypted = config.rdsInstanceStorageEncrypted;
    this.rdsInstanceStorageType = config.rdsInstanceStorageType;
    this.rdsInstanceSubnetIds = config.rdsInstanceSubnetIds;
    this.rdsKmsKeyArnOverride = config.rdsKmsKeyArnOverride;
    this.rdsKmsKeyIdOverride = config.rdsKmsKeyIdOverride;
    this.regexReplaceChars = config.regexReplaceChars;
    this.region = config.region;
    this.s3KmsAliasOverride = config.s3KmsAliasOverride;
    this.stage = config.stage;
    this.tags = config.tags;
    this.tenant = config.tenant;
    this.vpcId = config.vpcId;
  }
  public get accountId(): string | undefined {
    return this.inputs.account_id as string | undefined;
  }
  public set accountId(value: string | undefined) {
    this.inputs.account_id = value;
  }
  public get additionalTagMap(): { [key: string]: string } | undefined {
    return this.inputs.additional_tag_map as
      | { [key: string]: string }
      | undefined;
  }
  public set additionalTagMap(value: { [key: string]: string } | undefined) {
    this.inputs.additional_tag_map = value;
  }
  public get attributes(): string[] | undefined {
    return this.inputs.attributes as string[] | undefined;
  }
  public set attributes(value: string[] | undefined) {
    this.inputs.attributes = value;
  }
  public get auroraAllowMajorVersionUpgrade(): boolean | undefined {
    return this.inputs.aurora_allow_major_version_upgrade as
      | boolean
      | undefined;
  }
  public set auroraAllowMajorVersionUpgrade(value: boolean | undefined) {
    this.inputs.aurora_allow_major_version_upgrade = value;
  }
  public get auroraAllowedCidrBlocks(): string[] | undefined {
    return this.inputs.aurora_allowed_cidr_blocks as string[] | undefined;
  }
  public set auroraAllowedCidrBlocks(value: string[] | undefined) {
    this.inputs.aurora_allowed_cidr_blocks = value;
  }
  public get auroraAutoMinorVersionUpgrade(): boolean | undefined {
    return this.inputs.aurora_auto_minor_version_upgrade as boolean | undefined;
  }
  public set auroraAutoMinorVersionUpgrade(value: boolean | undefined) {
    this.inputs.aurora_auto_minor_version_upgrade = value;
  }
  public get auroraClusterEnabled(): boolean | undefined {
    return this.inputs.aurora_cluster_enabled as boolean | undefined;
  }
  public set auroraClusterEnabled(value: boolean | undefined) {
    this.inputs.aurora_cluster_enabled = value;
  }
  public get auroraClusterFamily(): string | undefined {
    return this.inputs.aurora_cluster_family as string | undefined;
  }
  public set auroraClusterFamily(value: string | undefined) {
    this.inputs.aurora_cluster_family = value;
  }
  public get auroraClusterName(): string | undefined {
    return this.inputs.aurora_cluster_name as string | undefined;
  }
  public set auroraClusterName(value: string | undefined) {
    this.inputs.aurora_cluster_name = value;
  }
  public get auroraClusterSize(): number | undefined {
    return this.inputs.aurora_cluster_size as number | undefined;
  }
  public set auroraClusterSize(value: number | undefined) {
    this.inputs.aurora_cluster_size = value;
  }
  public get auroraDbAdminPassword(): string | undefined {
    return this.inputs.aurora_db_admin_password as string | undefined;
  }
  public set auroraDbAdminPassword(value: string | undefined) {
    this.inputs.aurora_db_admin_password = value;
  }
  public get auroraDbAdminUsername(): string | undefined {
    return this.inputs.aurora_db_admin_username as string | undefined;
  }
  public set auroraDbAdminUsername(value: string | undefined) {
    this.inputs.aurora_db_admin_username = value;
  }
  public get auroraDbName(): string | undefined {
    return this.inputs.aurora_db_name as string | undefined;
  }
  public set auroraDbName(value: string | undefined) {
    this.inputs.aurora_db_name = value;
  }
  public get auroraEngine(): string | undefined {
    return this.inputs.aurora_engine as string | undefined;
  }
  public set auroraEngine(value: string | undefined) {
    this.inputs.aurora_engine = value;
  }
  public get auroraEngineMode(): string | undefined {
    return this.inputs.aurora_engine_mode as string | undefined;
  }
  public set auroraEngineMode(value: string | undefined) {
    this.inputs.aurora_engine_mode = value;
  }
  public get auroraEngineVersion(): string | undefined {
    return this.inputs.aurora_engine_version as string | undefined;
  }
  public set auroraEngineVersion(value: string | undefined) {
    this.inputs.aurora_engine_version = value;
  }
  public get auroraInstanceType(): string | undefined {
    return this.inputs.aurora_instance_type as string | undefined;
  }
  public set auroraInstanceType(value: string | undefined) {
    this.inputs.aurora_instance_type = value;
  }
  public get auroraScalingConfiguration(): any | undefined {
    return this.inputs.aurora_scaling_configuration as any | undefined;
  }
  public set auroraScalingConfiguration(value: any | undefined) {
    this.inputs.aurora_scaling_configuration = value;
  }
  public get auroraSecurityGroups(): string[] | undefined {
    return this.inputs.aurora_security_groups as string[] | undefined;
  }
  public set auroraSecurityGroups(value: string[] | undefined) {
    this.inputs.aurora_security_groups = value;
  }
  public get auroraServerlessv2ScalingConfiguration(): any | undefined {
    return this.inputs.aurora_serverlessv2_scaling_configuration as
      | any
      | undefined;
  }
  public set auroraServerlessv2ScalingConfiguration(value: any | undefined) {
    this.inputs.aurora_serverlessv2_scaling_configuration = value;
  }
  public get auroraSubnets(): string[] | undefined {
    return this.inputs.aurora_subnets as string[] | undefined;
  }
  public set auroraSubnets(value: string[] | undefined) {
    this.inputs.aurora_subnets = value;
  }
  public get context(): any | undefined {
    return this.inputs.context as any | undefined;
  }
  public set context(value: any | undefined) {
    this.inputs.context = value;
  }
  public get deletionProtection(): boolean | undefined {
    return this.inputs.deletion_protection as boolean | undefined;
  }
  public set deletionProtection(value: boolean | undefined) {
    this.inputs.deletion_protection = value;
  }
  public get deletionWindowInDays(): number | undefined {
    return this.inputs.deletion_window_in_days as number | undefined;
  }
  public set deletionWindowInDays(value: number | undefined) {
    this.inputs.deletion_window_in_days = value;
  }
  public get delimiter(): string | undefined {
    return this.inputs.delimiter as string | undefined;
  }
  public set delimiter(value: string | undefined) {
    this.inputs.delimiter = value;
  }
  public get descriptorFormats(): any | undefined {
    return this.inputs.descriptor_formats as any | undefined;
  }
  public set descriptorFormats(value: any | undefined) {
    this.inputs.descriptor_formats = value;
  }
  public get enableCustomOptionGroup(): boolean | undefined {
    return this.inputs.enable_custom_option_group as boolean | undefined;
  }
  public set enableCustomOptionGroup(value: boolean | undefined) {
    this.inputs.enable_custom_option_group = value;
  }
  public get enableKeyRotation(): boolean | undefined {
    return this.inputs.enable_key_rotation as boolean | undefined;
  }
  public set enableKeyRotation(value: boolean | undefined) {
    this.inputs.enable_key_rotation = value;
  }
  public get enabled(): boolean | undefined {
    return this.inputs.enabled as boolean | undefined;
  }
  public set enabled(value: boolean | undefined) {
    this.inputs.enabled = value;
  }
  public get enhancedMonitoringArn(): string | undefined {
    return this.inputs.enhanced_monitoring_arn as string | undefined;
  }
  public set enhancedMonitoringArn(value: string | undefined) {
    this.inputs.enhanced_monitoring_arn = value;
  }
  public get enhancedMonitoringName(): string {
    return this.inputs.enhanced_monitoring_name as string;
  }
  public set enhancedMonitoringName(value: string) {
    this.inputs.enhanced_monitoring_name = value;
  }
  public get environment(): string {
    return this.inputs.environment as string;
  }
  public set environment(value: string) {
    this.inputs.environment = value;
  }
  public get idLengthLimit(): number | undefined {
    return this.inputs.id_length_limit as number | undefined;
  }
  public set idLengthLimit(value: number | undefined) {
    this.inputs.id_length_limit = value;
  }
  public get labelKeyCase(): string | undefined {
    return this.inputs.label_key_case as string | undefined;
  }
  public set labelKeyCase(value: string | undefined) {
    this.inputs.label_key_case = value;
  }
  public get labelOrder(): string[] | undefined {
    return this.inputs.label_order as string[] | undefined;
  }
  public set labelOrder(value: string[] | undefined) {
    this.inputs.label_order = value;
  }
  public get labelValueCase(): string | undefined {
    return this.inputs.label_value_case as string | undefined;
  }
  public set labelValueCase(value: string | undefined) {
    this.inputs.label_value_case = value;
  }
  public get labelsAsTags(): string[] | undefined {
    return this.inputs.labels_as_tags as string[] | undefined;
  }
  public set labelsAsTags(value: string[] | undefined) {
    this.inputs.labels_as_tags = value;
  }
  public get name(): string | undefined {
    return this.inputs.name as string | undefined;
  }
  public set name(value: string | undefined) {
    this.inputs.name = value;
  }
  public get namespace(): string {
    return this.inputs.namespace as string;
  }
  public set namespace(value: string) {
    this.inputs.namespace = value;
  }
  public get rdsInstanceAllocatedStorage(): number | undefined {
    return this.inputs.rds_instance_allocated_storage as number | undefined;
  }
  public set rdsInstanceAllocatedStorage(value: number | undefined) {
    this.inputs.rds_instance_allocated_storage = value;
  }
  public get rdsInstanceAllowMajorVersionUpgrade(): boolean | undefined {
    return this.inputs.rds_instance_allow_major_version_upgrade as
      | boolean
      | undefined;
  }
  public set rdsInstanceAllowMajorVersionUpgrade(value: boolean | undefined) {
    this.inputs.rds_instance_allow_major_version_upgrade = value;
  }
  public get rdsInstanceAllowedCidrBlocks(): string[] | undefined {
    return this.inputs.rds_instance_allowed_cidr_blocks as string[] | undefined;
  }
  public set rdsInstanceAllowedCidrBlocks(value: string[] | undefined) {
    this.inputs.rds_instance_allowed_cidr_blocks = value;
  }
  public get rdsInstanceApplyImmediately(): boolean | undefined {
    return this.inputs.rds_instance_apply_immediately as boolean | undefined;
  }
  public set rdsInstanceApplyImmediately(value: boolean | undefined) {
    this.inputs.rds_instance_apply_immediately = value;
  }
  public get rdsInstanceAutoMinorVersionUpgrade(): boolean | undefined {
    return this.inputs.rds_instance_auto_minor_version_upgrade as
      | boolean
      | undefined;
  }
  public set rdsInstanceAutoMinorVersionUpgrade(value: boolean | undefined) {
    this.inputs.rds_instance_auto_minor_version_upgrade = value;
  }
  public get rdsInstanceBackupRetentionPeriod(): number | undefined {
    return this.inputs.rds_instance_backup_retention_period as
      | number
      | undefined;
  }
  public set rdsInstanceBackupRetentionPeriod(value: number | undefined) {
    this.inputs.rds_instance_backup_retention_period = value;
  }
  public get rdsInstanceBackupWindow(): string | undefined {
    return this.inputs.rds_instance_backup_window as string | undefined;
  }
  public set rdsInstanceBackupWindow(value: string | undefined) {
    this.inputs.rds_instance_backup_window = value;
  }
  public get rdsInstanceCaCertIdentifier(): string | undefined {
    return this.inputs.rds_instance_ca_cert_identifier as string | undefined;
  }
  public set rdsInstanceCaCertIdentifier(value: string | undefined) {
    this.inputs.rds_instance_ca_cert_identifier = value;
  }
  public get rdsInstanceCopyTagsToSnapshot(): boolean | undefined {
    return this.inputs.rds_instance_copy_tags_to_snapshot as
      | boolean
      | undefined;
  }
  public set rdsInstanceCopyTagsToSnapshot(value: boolean | undefined) {
    this.inputs.rds_instance_copy_tags_to_snapshot = value;
  }
  public get rdsInstanceDatabaseName(): string | undefined {
    return this.inputs.rds_instance_database_name as string | undefined;
  }
  public set rdsInstanceDatabaseName(value: string | undefined) {
    this.inputs.rds_instance_database_name = value;
  }
  public get rdsInstanceDatabasePassword(): string | undefined {
    return this.inputs.rds_instance_database_password as string | undefined;
  }
  public set rdsInstanceDatabasePassword(value: string | undefined) {
    this.inputs.rds_instance_database_password = value;
  }
  public get rdsInstanceDatabasePort(): number | undefined {
    return this.inputs.rds_instance_database_port as number | undefined;
  }
  public set rdsInstanceDatabasePort(value: number | undefined) {
    this.inputs.rds_instance_database_port = value;
  }
  public get rdsInstanceDatabaseUser(): string | undefined {
    return this.inputs.rds_instance_database_user as string | undefined;
  }
  public set rdsInstanceDatabaseUser(value: string | undefined) {
    this.inputs.rds_instance_database_user = value;
  }
  public get rdsInstanceDbOptions(): any | undefined {
    return this.inputs.rds_instance_db_options as any | undefined;
  }
  public set rdsInstanceDbOptions(value: any | undefined) {
    this.inputs.rds_instance_db_options = value;
  }
  public get rdsInstanceDbParameter(): any | undefined {
    return this.inputs.rds_instance_db_parameter as any | undefined;
  }
  public set rdsInstanceDbParameter(value: any | undefined) {
    this.inputs.rds_instance_db_parameter = value;
  }
  public get rdsInstanceDbParameterGroup(): string | undefined {
    return this.inputs.rds_instance_db_parameter_group as string | undefined;
  }
  public set rdsInstanceDbParameterGroup(value: string | undefined) {
    this.inputs.rds_instance_db_parameter_group = value;
  }
  public get rdsInstanceDnsZoneId(): string | undefined {
    return this.inputs.rds_instance_dns_zone_id as string | undefined;
  }
  public set rdsInstanceDnsZoneId(value: string | undefined) {
    this.inputs.rds_instance_dns_zone_id = value;
  }
  public get rdsInstanceEnabled(): boolean | undefined {
    return this.inputs.rds_instance_enabled as boolean | undefined;
  }
  public set rdsInstanceEnabled(value: boolean | undefined) {
    this.inputs.rds_instance_enabled = value;
  }
  public get rdsInstanceEngine(): string | undefined {
    return this.inputs.rds_instance_engine as string | undefined;
  }
  public set rdsInstanceEngine(value: string | undefined) {
    this.inputs.rds_instance_engine = value;
  }
  public get rdsInstanceEngineVersion(): string | undefined {
    return this.inputs.rds_instance_engine_version as string | undefined;
  }
  public set rdsInstanceEngineVersion(value: string | undefined) {
    this.inputs.rds_instance_engine_version = value;
  }
  public get rdsInstanceHostName(): string | undefined {
    return this.inputs.rds_instance_host_name as string | undefined;
  }
  public set rdsInstanceHostName(value: string | undefined) {
    this.inputs.rds_instance_host_name = value;
  }
  public get rdsInstanceInstanceClass(): string | undefined {
    return this.inputs.rds_instance_instance_class as string | undefined;
  }
  public set rdsInstanceInstanceClass(value: string | undefined) {
    this.inputs.rds_instance_instance_class = value;
  }
  public get rdsInstanceLicenseModel(): string | undefined {
    return this.inputs.rds_instance_license_model as string | undefined;
  }
  public set rdsInstanceLicenseModel(value: string | undefined) {
    this.inputs.rds_instance_license_model = value;
  }
  public get rdsInstanceMaintenanceWindow(): string | undefined {
    return this.inputs.rds_instance_maintenance_window as string | undefined;
  }
  public set rdsInstanceMaintenanceWindow(value: string | undefined) {
    this.inputs.rds_instance_maintenance_window = value;
  }
  public get rdsInstanceMajorEngineVersion(): string | undefined {
    return this.inputs.rds_instance_major_engine_version as string | undefined;
  }
  public set rdsInstanceMajorEngineVersion(value: string | undefined) {
    this.inputs.rds_instance_major_engine_version = value;
  }
  public get rdsInstanceMultiAz(): boolean | undefined {
    return this.inputs.rds_instance_multi_az as boolean | undefined;
  }
  public set rdsInstanceMultiAz(value: boolean | undefined) {
    this.inputs.rds_instance_multi_az = value;
  }
  public get rdsInstanceName(): string | undefined {
    return this.inputs.rds_instance_name as string | undefined;
  }
  public set rdsInstanceName(value: string | undefined) {
    this.inputs.rds_instance_name = value;
  }
  public get rdsInstanceOptionGroupName(): string | undefined {
    return this.inputs.rds_instance_option_group_name as string | undefined;
  }
  public set rdsInstanceOptionGroupName(value: string | undefined) {
    this.inputs.rds_instance_option_group_name = value;
  }
  public get rdsInstancePubliclyAccessible(): boolean | undefined {
    return this.inputs.rds_instance_publicly_accessible as boolean | undefined;
  }
  public set rdsInstancePubliclyAccessible(value: boolean | undefined) {
    this.inputs.rds_instance_publicly_accessible = value;
  }
  public get rdsInstanceSecurityGroupIds(): string[] | undefined {
    return this.inputs.rds_instance_security_group_ids as string[] | undefined;
  }
  public set rdsInstanceSecurityGroupIds(value: string[] | undefined) {
    this.inputs.rds_instance_security_group_ids = value;
  }
  public get rdsInstanceSkipFinalSnapshot(): boolean | undefined {
    return this.inputs.rds_instance_skip_final_snapshot as boolean | undefined;
  }
  public set rdsInstanceSkipFinalSnapshot(value: boolean | undefined) {
    this.inputs.rds_instance_skip_final_snapshot = value;
  }
  public get rdsInstanceSnapshotIdentifier(): string | undefined {
    return this.inputs.rds_instance_snapshot_identifier as string | undefined;
  }
  public set rdsInstanceSnapshotIdentifier(value: string | undefined) {
    this.inputs.rds_instance_snapshot_identifier = value;
  }
  public get rdsInstanceStorageEncrypted(): boolean | undefined {
    return this.inputs.rds_instance_storage_encrypted as boolean | undefined;
  }
  public set rdsInstanceStorageEncrypted(value: boolean | undefined) {
    this.inputs.rds_instance_storage_encrypted = value;
  }
  public get rdsInstanceStorageType(): string | undefined {
    return this.inputs.rds_instance_storage_type as string | undefined;
  }
  public set rdsInstanceStorageType(value: string | undefined) {
    this.inputs.rds_instance_storage_type = value;
  }
  public get rdsInstanceSubnetIds(): string[] | undefined {
    return this.inputs.rds_instance_subnet_ids as string[] | undefined;
  }
  public set rdsInstanceSubnetIds(value: string[] | undefined) {
    this.inputs.rds_instance_subnet_ids = value;
  }
  public get rdsKmsKeyArnOverride(): string | undefined {
    return this.inputs.rds_kms_key_arn_override as string | undefined;
  }
  public set rdsKmsKeyArnOverride(value: string | undefined) {
    this.inputs.rds_kms_key_arn_override = value;
  }
  public get rdsKmsKeyIdOverride(): string | undefined {
    return this.inputs.rds_kms_key_id_override as string | undefined;
  }
  public set rdsKmsKeyIdOverride(value: string | undefined) {
    this.inputs.rds_kms_key_id_override = value;
  }
  public get regexReplaceChars(): string | undefined {
    return this.inputs.regex_replace_chars as string | undefined;
  }
  public set regexReplaceChars(value: string | undefined) {
    this.inputs.regex_replace_chars = value;
  }
  public get region(): string | undefined {
    return this.inputs.region as string | undefined;
  }
  public set region(value: string | undefined) {
    this.inputs.region = value;
  }
  public get s3KmsAliasOverride(): string | undefined {
    return this.inputs.s3_kms_alias_override as string | undefined;
  }
  public set s3KmsAliasOverride(value: string | undefined) {
    this.inputs.s3_kms_alias_override = value;
  }
  public get stage(): string | undefined {
    return this.inputs.stage as string | undefined;
  }
  public set stage(value: string | undefined) {
    this.inputs.stage = value;
  }
  public get tags(): { [key: string]: string } | undefined {
    return this.inputs.tags as { [key: string]: string } | undefined;
  }
  public set tags(value: { [key: string]: string } | undefined) {
    this.inputs.tags = value;
  }
  public get tenant(): string | undefined {
    return this.inputs.tenant as string | undefined;
  }
  public set tenant(value: string | undefined) {
    this.inputs.tenant = value;
  }
  public get vpcId(): string {
    return this.inputs.vpc_id as string;
  }
  public set vpcId(value: string) {
    this.inputs.vpc_id = value;
  }
  public get auroraArnOutput() {
    return this.getString("aurora_arn");
  }
  public get auroraClusterIdentifierOutput() {
    return this.getString("aurora_cluster_identifier");
  }
  public get auroraEndpointOutput() {
    return this.getString("aurora_endpoint");
  }
  public get auroraMasterHostOutput() {
    return this.getString("aurora_master_host");
  }
  public get auroraMasterUsernameOutput() {
    return this.getString("aurora_master_username");
  }
  public get auroraNameOutput() {
    return this.getString("aurora_name");
  }
  public get auroraReaderEndpointOutput() {
    return this.getString("aurora_reader_endpoint");
  }
  public get auroraReplicasHostOutput() {
    return this.getString("aurora_replicas_host");
  }
  public get rdsInstanceArnOutput() {
    return this.getString("rds_instance_arn");
  }
  public get rdsInstanceEndpointOutput() {
    return this.getString("rds_instance_endpoint");
  }
  public get rdsInstanceHostnameOutput() {
    return this.getString("rds_instance_hostname");
  }
  public get rdsInstanceIdOutput() {
    return this.getString("rds_instance_id");
  }
  public get rdsInstanceKmsArnOutput() {
    return this.getString("rds_instance_kms_arn");
  }
  public get rdsInstanceKmsIdOutput() {
    return this.getString("rds_instance_kms_id");
  }
  public get rdsInstanceResourceIdOutput() {
    return this.getString("rds_instance_resource_id");
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
